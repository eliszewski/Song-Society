application {
config {
baseName SongSociety,
applicationType monolith,
packageName com.society,
authenticationType jwt,
prodDatabaseType mysql,
clientFramework react
}
entities *
}

entity User {
login String required minlength(1) maxlength(50),
firstName String required minlength(1) maxlength(50),
lastName String required minlength(1) maxlength(50),
email String required pattern(/^[^@\s]+@[^@\s]+.[^@\s]+$/)
societyTag String required
spotifyToken String 
}

entity Profile {
societyTag String required,
profilePicture ImageBlob,
user Login
}

entity Post {
date ZonedDateTime required,
content TextBlob required,
user Login
}

entity Like{
date ZonedDateTime required,
user Login
}

entity Reply{
date ZonedDateTime required,
content TextBlob required,
user Login
}

entity Music {
songName String required,
artistName String required,
albumName String
}

relationship OneToOne {
Profile{user} to User
}

relationship OneToMany {
Post{likes(date)} to Like,
Post{replies(date)} to Reply,
User{music} to Music
}

relationship ManyToOne {
Like{post} to Post,
Reply{post} to Post
}

relationship ManyToMany {
User{music} to Music
}

paginate Post, Like, Reply with infinite-scroll

dto * with mapstruct
service * with serviceClass